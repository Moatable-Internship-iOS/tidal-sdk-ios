name: Run Lint Checks

on:
  workflow_call:

  pull_request:
    branches:
      - '**'

  merge_group:
    types: [checks_requested]

jobs:
  run-swiftlint:
    name: Run SwiftLint
    runs-on: macos-14
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Determine base and feature branches
      id: vars
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE_BRANCH=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
            echo "FEATURE_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "merge_group" ]; then
            echo "BASE_BRANCH=${{ github.event.merge_group.base_ref }}" >> $GITHUB_OUTPUT
            echo "FEATURE_BRANCH=HEAD" >> $GITHUB_OUTPUT  # This is a synthetic merge commit
        else
            echo "Unsupported event: ${{ github.event_name }}"
            exit 1
        fi

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history so git diff works
        ref: ${{ steps.vars.outputs.FEATURE_BRANCH }}  # Ensure we checkout the PR head

    - name: Find modified Swift files and lint them
      run: |
        BASE_BRANCH="${{ steps.vars.outputs.BASE_BRANCH }}"
        FEATURE_BRANCH="${{ steps.vars.outputs.FEATURE_BRANCH }}"

        # Get list of changed Swift files as an array
        modified_files=($(git diff --name-only origin/$BASE_BRANCH...$FEATURE_BRANCH -- '*.swift'))
        readonly modified_files

        if [ -z "$modified_files" ]; then
            echo "No Swift files were changed. Linter won't run."
            exit 0
        fi

        files_argument=""
        for i in "${modified_files[@]}"; do
            files_argument="$files_argument $i"
        done

        echo "Base branch: $BASE_BRANCH"
        echo "Feature branch: $FEATURE_BRANCH"
        echo "Modified files: $files_argument"

        # Run SwiftLint on the changed files
        echo "Executing: ./bin/swiftlint/run-swiftlint.sh -i $files_argument"
        ./bin/swiftlint/run-swiftlint.sh -i "$files_argument"
