//
// UsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class UsersAPI {

    /**
     Get multiple users.
     
     - parameter filterId: (query) Allows to filter the collection of resources based on id attribute value (optional)
     - returns: UsersMultiDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersGet(filterId: [String]? = nil) async throws -> UsersMultiDataDocument {
        return try await usersGetWithRequestBuilder(filterId: filterId).execute().body
    }

    /**
     Get multiple users.
     - GET /users
     - Retrieves multiple users by available filters, or without if applicable.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter filterId: (query) Allows to filter the collection of resources based on id attribute value (optional)
     - returns: RequestBuilder<UsersMultiDataDocument> 
     */
    internal class func usersGetWithRequestBuilder(filterId: [String]? = nil) -> RequestBuilder<UsersMultiDataDocument> {
        let localVariablePath = "/users"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersMultiDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get single user.
     
     - parameter id: (path) User id 
     - returns: UsersSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersIdGet(id: String) async throws -> UsersSingleDataDocument {
        return try await usersIdGetWithRequestBuilder(id: id).execute().body
    }

    /**
     Get single user.
     - GET /users/{id}
     - Retrieves single user by id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User id 
     - returns: RequestBuilder<UsersSingleDataDocument> 
     */
    internal class func usersIdGetWithRequestBuilder(id: String) -> RequestBuilder<UsersSingleDataDocument> {
        var localVariablePath = "/users/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get current user's user(s).
     
     - returns: UsersSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersMeGet() async throws -> UsersSingleDataDocument {
        return try await usersMeGetWithRequestBuilder().execute().body
    }

    /**
     Get current user's user(s).
     - GET /users/me
     - Retrieves current user's user(s).
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - returns: RequestBuilder<UsersSingleDataDocument> 
     */
    internal class func usersMeGetWithRequestBuilder() -> RequestBuilder<UsersSingleDataDocument> {
        let localVariablePath = "/users/me"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
