//
// UserPublicProfilesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class UserPublicProfilesAPI {

    /**
     Get my user profile
     
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - returns: UserPublicProfilesSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getMyUserPublicProfile(locale: String, include: [String]? = nil) async throws -> UserPublicProfilesSingleDataDocument {
        return try await getMyUserPublicProfileWithRequestBuilder(locale: locale, include: include).execute().body
    }

    /**
     Get my user profile
     - GET /userPublicProfiles/me
     - Retrieve the logged-in user's public profile details.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - returns: RequestBuilder<UserPublicProfilesSingleDataDocument> 
     */
    internal class func getMyUserPublicProfileWithRequestBuilder(locale: String, include: [String]? = nil) -> RequestBuilder<UserPublicProfilesSingleDataDocument> {
        let localVariablePath = "/userPublicProfiles/me"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "locale": (wrappedValue: locale.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserPublicProfilesSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get user public profile by id
     
     - parameter id: (path) TIDAL user id 
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - returns: UserPublicProfilesSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfileById(id: String, locale: String, include: [String]? = nil) async throws -> UserPublicProfilesSingleDataDocument {
        return try await getUserPublicProfileByIdWithRequestBuilder(id: id, locale: locale, include: include).execute().body
    }

    /**
     Get user public profile by id
     - GET /userPublicProfiles/{id}
     - Retrieve user public profile details by TIDAL user id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter id: (path) TIDAL user id 
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - returns: RequestBuilder<UserPublicProfilesSingleDataDocument> 
     */
    internal class func getUserPublicProfileByIdWithRequestBuilder(id: String, locale: String, include: [String]? = nil) -> RequestBuilder<UserPublicProfilesSingleDataDocument> {
        var localVariablePath = "/userPublicProfiles/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "locale": (wrappedValue: locale.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserPublicProfilesSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: followers
     
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: followers (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: UsersRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfileFollowersRelationship(id: String, include: [String]? = nil, pageCursor: String? = nil) async throws -> UsersRelationshipDocument {
        return try await getUserPublicProfileFollowersRelationshipWithRequestBuilder(id: id, include: include, pageCursor: pageCursor).execute().body
    }

    /**
     Relationship: followers
     - GET /userPublicProfiles/{id}/relationships/followers
     - Retrieve user's public followers
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: followers (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: RequestBuilder<UsersRelationshipDocument> 
     */
    internal class func getUserPublicProfileFollowersRelationshipWithRequestBuilder(id: String, include: [String]? = nil, pageCursor: String? = nil) -> RequestBuilder<UsersRelationshipDocument> {
        var localVariablePath = "/userPublicProfiles/{id}/relationships/followers"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: following
     
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: following (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: UsersRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfileFollowingRelationship(id: String, include: [String]? = nil, pageCursor: String? = nil) async throws -> UsersRelationshipDocument {
        return try await getUserPublicProfileFollowingRelationshipWithRequestBuilder(id: id, include: include, pageCursor: pageCursor).execute().body
    }

    /**
     Relationship: following
     - GET /userPublicProfiles/{id}/relationships/following
     - Retrieve user's public followings
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: following (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: RequestBuilder<UsersRelationshipDocument> 
     */
    internal class func getUserPublicProfileFollowingRelationshipWithRequestBuilder(id: String, include: [String]? = nil, pageCursor: String? = nil) -> RequestBuilder<UsersRelationshipDocument> {
        var localVariablePath = "/userPublicProfiles/{id}/relationships/following"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: picks
     
     - parameter id: (path) TIDAL user id 
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPicks (optional)
     - returns: UserPublicProfilePicksRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfilePublicPicksRelationship(id: String, locale: String, include: [String]? = nil) async throws -> UserPublicProfilePicksRelationshipDocument {
        return try await getUserPublicProfilePublicPicksRelationshipWithRequestBuilder(id: id, locale: locale, include: include).execute().body
    }

    /**
     Relationship: picks
     - GET /userPublicProfiles/{id}/relationships/publicPicks
     - Retrieve user's public picks.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter id: (path) TIDAL user id 
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPicks (optional)
     - returns: RequestBuilder<UserPublicProfilePicksRelationshipDocument> 
     */
    internal class func getUserPublicProfilePublicPicksRelationshipWithRequestBuilder(id: String, locale: String, include: [String]? = nil) -> RequestBuilder<UserPublicProfilePicksRelationshipDocument> {
        var localVariablePath = "/userPublicProfiles/{id}/relationships/publicPicks"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "locale": (wrappedValue: locale.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserPublicProfilePicksRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: playlists
     
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: PlaylistsRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfilePublicPlaylistsRelationship(id: String, include: [String]? = nil, pageCursor: String? = nil) async throws -> PlaylistsRelationshipDocument {
        return try await getUserPublicProfilePublicPlaylistsRelationshipWithRequestBuilder(id: id, include: include, pageCursor: pageCursor).execute().body
    }

    /**
     Relationship: playlists
     - GET /userPublicProfiles/{id}/relationships/publicPlaylists
     - Retrieves user's public playlists.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter id: (path) TIDAL user id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: RequestBuilder<PlaylistsRelationshipDocument> 
     */
    internal class func getUserPublicProfilePublicPlaylistsRelationshipWithRequestBuilder(id: String, include: [String]? = nil, pageCursor: String? = nil) -> RequestBuilder<PlaylistsRelationshipDocument> {
        var localVariablePath = "/userPublicProfiles/{id}/relationships/publicPlaylists"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PlaylistsRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get user public profiles
     
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - parameter filterId: (query) TIDAL user id (optional)
     - returns: UserPublicProfilesMultiDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func getUserPublicProfilesByFilters(locale: String, include: [String]? = nil, filterId: [String]? = nil) async throws -> UserPublicProfilesMultiDataDocument {
        return try await getUserPublicProfilesByFiltersWithRequestBuilder(locale: locale, include: include, filterId: filterId).execute().body
    }

    /**
     Get user public profiles
     - GET /userPublicProfiles
     - Reads user public profile details by TIDAL user ids.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - responseHeaders: [X-RateLimit-Remaining(Int), X-RateLimit-Burst-Capacity(Int), X-RateLimit-Replenish-Rate(Int), X-RateLimit-Requested-Tokens(Int)]
     - parameter locale: (query) Locale language tag (IETF BCP 47 Language Tag) 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicPlaylists, publicPicks, followers, following (optional)
     - parameter filterId: (query) TIDAL user id (optional)
     - returns: RequestBuilder<UserPublicProfilesMultiDataDocument> 
     */
    internal class func getUserPublicProfilesByFiltersWithRequestBuilder(locale: String, include: [String]? = nil, filterId: [String]? = nil) -> RequestBuilder<UserPublicProfilesMultiDataDocument> {
        let localVariablePath = "/userPublicProfiles"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "locale": (wrappedValue: locale.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserPublicProfilesMultiDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
